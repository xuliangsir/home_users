/** * Created by liangxu on 2017/11/25. */const LoginService = require('../../controller/service/login');const ShopService = require('../../controller/service/shopService');const APIError = require('../../util/rest').APIError;const QiniuSDK = require("../../controller/sdk/qiniuCloud");var qcloud_cos = require('qcloud_cos');let appid = '10061631';   //1253210153let secret_id = 'AKIDyOodfIcmxmSMhgS7CeoZmD5kNXap9ylw';let secret_key = '2AxtftpiiyY2hLJjghJjhi243wFZcNme';let EXPIRED_SECONDS = 100; //过期时间module.exports = function(router){    router            .post('/api/service/add', async(ctx) => {                const shopService = new ShopService();                try{                    const result = await shopService.addService(ctx);                    ctx.rest(result);                }catch(e){                    console.log("shopService====add==",e);                    throw new APIError(e);                }            })            .get('/api/service/get', async(ctx) => {                const shopService = new ShopService();                try{                    const result = await shopService.getService(ctx);                    if(!result){                        throw new APIError(1005)                    }                    ctx.rest(result);                }catch(e){                    console.log("getService====eee==",e);                    throw new APIError(e);                }            })            .post('/api/service/update', async(ctx) => {                const shopService = new ShopService();                try{                    const result = await shopService.updateService(ctx);                    if(!result){                        throw new APIError(1005)                    }                    ctx.rest(result);                }catch(e){                    console.log("update service====eee==",e);                    throw new APIError(e);                }            })            .get('/api/service/update', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.getVerifyCode(ctx);                    console.log("result000==========",result);                    if(!result){                        throw new APIError(1005)                    }                    ctx.rest(result);                }catch(e){                    console.log("getVerifyCode====eee==",e);                    throw new APIError(e);                }            })            .post('/api/regist', async(ctx) => {                console.log("------regist---======");                const loginService = new LoginService();                try{                    const result = await loginService.regist(ctx);                    console.log("result===regist=======",result);                    ctx.rest({result: result});                }catch(e){                    throw (e)                }            })            .post('/api/login', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.login(ctx);                    console.log("=======result===login=======",result);                    if(!result){                        throw new APIError(1004)                    }                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .post('/api/setuppwd', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.setupPwd(ctx);                    console.log("result===setuppwd=======",result);                    ctx.rest({result: result});                }catch(e){                    throw (e)                }            })            .post('/api/resetuppwd', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.reSetupPwd(ctx);                    console.log("/api/resetuppwd22222=======",result);                    ctx.rest({result: result});                }catch(e){                    throw (e)                }            })            .post('/api/addshopsetupinfo', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.addShopsetupService(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .get('/api/getshopsetupinfo', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.getShopSetupInfoService(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .post('/api/updateshopsetup', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.addShopsetupService(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .post('/api/addshopcertifyInfo', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.addShopcertifyService(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .get('/api/getshopcertifyInfo', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.getShopCertifyInfoService(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .post('/api/updateshopcertifyInfo', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.addShopsetupService(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .post('/api/service/addkind', async(ctx) => {                try{                    const shopService = new ShopService();                    const result = await shopService.addPlatformKind(ctx);                    ctx.rest(result);                }catch(e){                    throw (e)                }            })            .get('/api/service/getkind', async(ctx) => {                try{                    const servicekinds = new ShopService();                    ctx.rest(servicekinds);                }catch(e){                    throw (e)                }            })            .get('/api/service/getplatformkind', async(ctx) => {                try{                    ctx.rest({platformkind:['全部项目','日常保洁','深度清洁','保姆(到家做饭)','月嫂/育儿嫂','家居清洗','周期保洁','企业保洁','代办跑退','家电清洗','家庭安装及维修']});                }catch(e){                    throw (e)                }            })            .get('/api/service/callbackPay', async(ctx) => {                try{                }catch(e){                    throw (e)                }            })            .post('/api/service/callbackPay', async(ctx) => {                try{                }catch(e){                    throw (e)                }            })};