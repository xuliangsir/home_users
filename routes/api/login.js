/** * Created by liangxu on 2017/11/16. */const LoginService = require('../../controller/service/login');const APIError = require('../../util/rest').APIError;const QiniuSDK = require("../../controller/sdk/qiniuCloud");var qcloud_cos = require('qcloud_cos');let appid = '10061631';   //1253210153let secret_id = 'AKIDyOodfIcmxmSMhgS7CeoZmD5kNXap9ylw';let secret_key = '2AxtftpiiyY2hLJjghJjhi243wFZcNme';let EXPIRED_SECONDS = 100; //过期时间module.exports = function(router){    router            .get('/api/user/getverifycode', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.getVerifyCode(ctx);                    console.log("==getVerifyCode result==========",result);                    ctx.rest(result);                }catch(e){                    console.log("----getVerifyCode====eee==",e);                    throw new APIError(1005, "验证码已发送", 1005);                }            })            .post('/api/user/regist', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.registService(ctx);                    console.log("result===regist=======",result);                    ctx.rest(result);                }catch(e){e                    throw new APIError(e);                }            })            .post('/api/user/login', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.login(ctx);                    console.log("===result===login====",result);                    if(!result){                        throw new APIError(1004);                    }                    ctx.rest(result);                }catch(e){                    console.log("===result==login==eeee==",e);                    throw (e)                }            })            .post('/api/setuppwd', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.setupPwd(ctx);                    console.log("result===setuppwd=======",result);                    ctx.rest({result: result});                }catch(e){                    throw new APIError(e);                }            })            .post('/api/resetuppwd', async(ctx) => {                const loginService = new LoginService();                try{                    const result = await loginService.reSetupPwd(ctx);                    ctx.rest({result: result});                }catch(e){                    throw new APIError(e);                }            })            .post('/api/user/servicekind', async(ctx) => {                const loginService = new LoginService();                try{                    const serviceResult = await loginService.getServicesKindService(ctx);                    ctx.rest(serviceResult);                }catch(e){                    throw new APIError(e);                }            })            .post('/api/user/getSubServiceKind', async(ctx) => { //二级页面添加子服务类型                const loginService = new LoginService();                try{                    const serviceResult = await loginService.getSubServicesKindService(ctx);                    ctx.rest(serviceResult);                }catch(e){                    throw new APIError(e);                }            })            .post('/api/user/getservicelist', async(ctx) => { //二级页面添加子服务类型                const loginService = new LoginService();                try{                    const serviceList = await loginService.getShopServicesListService(ctx);                    ctx.rest(serviceList);                }catch(e){                    throw new APIError(e);                }            })            .post('/api/user/servicedetail', async(ctx) => { //查看服务详情                const loginService = new LoginService();                try{                    const serviceList = await loginService.getShopServicesDetailService(ctx);                    ctx.rest(serviceList);                }catch(e){                    throw new APIError(e);                }            })            .post('/api/user/getserviceinfoByid', async(ctx) => { //查看服务详情                const loginService = new LoginService();                try{                    const serviceList = await loginService.getShopServicesDetailService(ctx);                    ctx.rest(serviceList);                }catch(e){                    throw new APIError(e);                }            })};