/** * Created by liangxu on 2017/11/30. */let _ = require('lodash');let errorCode = require('../../config/errorCode');let pg = require('../../util/DB_Base');let knex = require('../../util/knex');let util = require('../../util/util');class PayDao{    async addOrderInfoDao(params){        console.log("======addOrderInfoDao===params==", params);        try{            return await knex("order").insert(params)        }catch(e){            console.log("======addOrderInfoDao===e==", e);            throw e;        }    }    async getShopServiceDao(serviceid){        try{            return await knex("shop_service").column(                    "shop_service.id as serviceid",                    "shop_service.shopid ",                    "shop_service.name",                    "shop_service.description",                    "shop_service.price",                    "shop_service.originalprice",                    "shop_service.minbuycount",                    "shop_service.servicetimes",                    "shop_service.platformkind",                    "shop_service.shopkind",                    "shop_service.city",                    "shop_service.sortNo",                    "shop_service.isonline"            ).select().where({id:serviceid})        }catch(e){            console.log("======addServiceDao===e==", e);            throw e;        }    }    async updateShopServiceDao(serviceid){        try{            return await knex("shop_service").update(                    "shop_service.name",                    "shop_service.description",                    "shop_service.price",                    "shop_service.originalprice",                    "shop_service.minbuycount",                    "shop_service.servicetimes",                    "shop_service.platformkind",                    "shop_service.shopkind",                    "shop_service.city",                    "shop_service.sortNo",                    "shop_service.isonline"            ).where({id:serviceid}).select();        }catch(e){            console.log("======addServiceDao===e==", e);            throw e;        }    }    async addPlatformKindDao(params){        try{            return await knex("platform_kind").insert(params)        }catch(e){            console.log("======addPlatformKindDao===e==", e);            throw e;        }    }    async getShopServicekindDao(shopid){        try{            return await knex("shop_service").column(                    "shop_service.id as serviceid",                    "shop_service.shopid ",                    "shop_service.name",                    "shop_service.description",                    "shop_service.price",                    "shop_service.originalprice",                    "shop_service.minbuycount",                    "shop_service.servicetimes",                    "shop_service.platformkind",                    "shop_service.shopkind",                    "shop_service.city",                    "shop_service.sortNo",                    "shop_service.isonline"            ).select().where({id:serviceid})        }catch(e){            console.log("======addServiceDao===e==", e);            throw e;        }    }}module.exports= PayDao;