/** * Created by liangxu on 2017/11/30. */let sendVerifyCode = require('../sdk/sendVerifyCode').send_sms;let https = require('https');let qs = require('querystring');let _ = require('lodash');let LoginDao = require('../dao/LoginDao');let ShopDao = require('../dao/ShopDao');let VerifyCode = require('../../controller/sdk/verifyCode');const APIError = require('../../util/rest').APIError;const ErrorCoe = require('../../config/errorCode');const util = require("../../util/util");const qiniu = require("qiniu");const moment = require("moment");class ShopService{    async addService(ctx) {        const {shopid, name,description,price, originalprice, minbuycount, servicetimes, platformkind, shopkind, city, sortNo, isonline} = ctx.request.body;        const params = {            uuid: util.getUserUUID(),            shopid:shopid,            name:name,            description:description,            price:price,            originalprice:originalprice,            minbuycount:minbuycount,            servicetimes:servicetimes,            platformkind:platformkind,            shopkind:shopkind,            city:city,            sortno:sortNo,            isonline:isonline        };        console.log("=====addService====params===",params);        const addresult = await new ShopDao().addServiceDao(params);        if(!addresult){            return false;        }        return true;    }    async getService(ctx) {        const {serviceid} = ctx.query;        const srviceResult = await new ShopDao().getShopServiceDao(serviceid);        if(!srviceResult.length){            return false;        }        return srviceResult;    }    async updateService(ctx) {        const {serviceid} = ctx.query;        const updateResult = await new ShopDao().updateShopServiceDao(serviceid);        if(!updateResult){            return false;        }        return updateResult;    }    async addPlatformKind(ctx) {        const {sortNo, servicekind, shopid} = ctx.request.body;        const params = {            uuid: util.getUUID(),            sortno: sortNo,            servicekind: servicekind,            shopid: shopid        };        const addresult = await new ShopDao().addPlatformKindDao(params);        if(!addresult){            return false;        }        return true;    }    async getServicekind(ctx) {        const {shopid} = ctx.query;        const srviceResult = await new ShopDao().getShopServiceDao(shopid);        if(!srviceResult.length){            return false;        }        return srviceResult;    }}module.exports = ShopService;